<?xml version="1.0" encoding="utf-8"?>
<topic id="ecc0bf75-4bc6-4e29-889b-f6249448f25a" revisionNumber="1">
<developerReferenceWithSyntaxDocument xmlns="http://ddue.schemas.microsoft.com/authoring/2003/5" xmlns:xlink="http://www.w3.org/1999/xlink">
<!--
<summary>
<para>Optional summary abstract</para>
</summary>
-->
<!-- NOTE: This is similar to the API reference documentation which is
produced by the reference build.  You should probably just use that
instead of this. -->

<introduction>
<!-- Uncomment this to generate an outline of the section and sub-section
titles.  Specify a numeric value as the inner text to limit it to
a specific number of sub-topics when creating the outline.  Specify
zero (0) to limit it to top-level sections only.  -->
<!-- <autoOutline /> -->

<para>
uringTrader can create beautiful and fully-customizable reports, based on 
user-defined templates. Depending on your application, you can render reports 
in the following formats:
</para>

<list class="bullet">
  <listItem><para>native Windows</para></listItem>
  <listItem><para>Microsoft Excel</para></listItem>
  <listItem><para>R-Markdown</para></listItem>
  <listItem><para>R</para></listItem>
</list>

<para>
In this topic, we describe how these templates work.
</para>

</introduction>

<section address="Section1"><title>Native Templates</title><content>
<!-- Uncomment this to create a sub-section outline
<autoOutline /> -->

<para>
t.b.d.
</para>

</content></section>

<section address="Section1"><title>Excel Templates</title><content>
<!-- Uncomment this to create a sub-section outline
<autoOutline /> -->

<para>
t.b.d.
</para>

</content></section>

<section address="Section1"><title>R Templates</title><content>
<!-- Uncomment this to create a sub-section outline
<autoOutline /> -->

<para>
t.b.d.
</para>

</content></section>

<section address="Section1"><title>R-Markdown Templates</title><content>
<!-- Uncomment this to create a sub-section outline
<autoOutline /> -->

<para>
t.b.d.
</para>

</content></section>

<relatedTopics>
<!-- One or more of the following:
- A local link
- An external link
- A code entity reference

<link xlink:href="Other Topic's ID">Link text</link>
<externalLink>
<linkText>Link text</linkText>
<linkAlternateText>Optional alternate link text</linkAlternateText>
<linkUri>URI</linkUri>
</externalLink>
<codeEntityReference>API member ID</codeEntityReference>

Examples:

<link xlink:href="00e97994-e9e6-46e0-b420-5be86b2f8278">Some other topic</link>

<externalLink>
<linkText>SHFB on GitHub</linkText>
<linkAlternateText>Go to GitHub</linkAlternateText>
<linkUri>https://GitHub.com/EWSoftware/SHFB</linkUri>
</externalLink>

<codeEntityReference>T:TestDoc.TestClass</codeEntityReference>
<codeEntityReference>P:TestDoc.TestClass.SomeProperty</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.#ctor</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.#ctor(System.String,System.Int32)</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.ToString</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.FirstMethod</codeEntityReference>
<codeEntityReference>M:TestDoc.TestClass.SecondMethod(System.Int32,System.String)</codeEntityReference>
-->
</relatedTopics>
</developerReferenceWithSyntaxDocument>
</topic>